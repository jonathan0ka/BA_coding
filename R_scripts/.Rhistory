######
effect_size <- ES.h(p1, p2)
# Calculate the sample size
sample_size <- power.prob.test(h = effect_size, power = power, sig.level = sig_level)
# Calculate the sample size
sample_size <- power.prob.test(0.65, 0.75, power = 0.8, sig_level=0.05, alternative = "onesided")
# Calculate the sample size
sample_size <- power.prob.test(0.65, 0.75, power = 0.8, sig_level=0.05, alternative = "onesided")
# Calculate the sample size
sample_size <- power.prop.test(0.65, 0.75, power = 0.8, sig_level=0.05, alternative = "onesided")
?power.prop.test
# Calculate the sample size
sample_size <- power.prop.test(0.65, 0.75, power = 0.8, sig_level=0.05, alternative = "one.sided")
# Calculate the sample size
sample_size <- power.prop.test(p1 = 0.65, p2 = 0.75, power = 0.8, sig_level=0.05, alternative = "one.sided")
# Calculate the sample size
sample_size <- power.prop.test(p1 = 0.65, p2 = 0.75, power = 0.8, sig.level=0.05, alternative = "one.sided")
print(sample_size)
head(proportions)
data_lab_experiment <-
read.table("https://dataverse.harvard.edu/api/access/datafile/:persistentId?persistentId=doi:10.7910/DVN/27366/VOLGZD",
header = TRUE, fill = TRUE)
proportions <- data_lab_experiment %>%
mutate(overhead_level = case_when(noover == 1 ~ 0,
(high == 1) | (highcover == 1) ~ 50,
(low == 1) | (lowcover == 1) ~ 5),
cover = case_when(noover == 1 ~ "control",
(highcover == 1) |  (lowcover == 1) ~ "covered",
TRUE ~ "not covered")) %>%
group_by(overhead_level, cover) %>%
count(allocation) %>%
group_by(overhead_level, cover) %>%
mutate(sum = sum(n),
freq = n/sum(n)) %>%
filter(allocation == 1) %>%
dplyr::select(-allocation) %>%
mutate(CI_lower = prop.test(n, sum)$conf.int[1],
CI_upper = prop.test(n, sum)$conf.int[2]) %>%
ungroup() %>%
mutate(Treatment = c(1, 4, 2, 5, 3))
proportions %>%
dplyr::select(c(1:4,8)) %>%
rename("Overhead level (%)" = overhead_level,
"Group" = cover,
"No. of donations to charity:water" = n,
"Total participants" = sum) %>%
kableExtra::kable() %>%
kable_classic(full_width = F) %>%
kable_styling(latex_options = "hold_position")
groups <- c('covered 5%', 'not covered 5%', 'covered 50%', 'not covered 50%')
donations <- c(70, 60, 65, 43)
participants <- c(91, 90, 91, 87)
control_participants <- 90
control_donations <- 66
z_values <- numeric(length(proportions$cover))
p_values <- numeric(length(proportions$cover))
for (i in 1:length(groups)) {
test <- prop.test(c(control_donations, donations[i]), c(control_participants, participants[i]), correct = FALSE)
z_values[i] <- qnorm(test$p.value / 2)
p_values[i] <- test$p.value
}
results <- data.frame(Group = c(groups, "control"), Z_Value = z_values, P_Value = p_values)
print(results)
proportions$cover
groups <- c('covered 5%', 'not covered 5%', 'covered 50%', 'not covered 50%')
donations <- c(70, 60, 65, 43)
participants <- c(91, 90, 91, 87)
control_participants <- 90
control_donations <- 66
z_values <- numeric(length(groups))
p_values <- numeric(length(groups))
for (i in 1:length(groups)) {
test <- prop.test(c(control_donations, donations[i]), c(control_participants, participants[i]), correct = FALSE)
z_values[i] <- qnorm(test$p.value / 2)
p_values[i] <- test$p.value
}
results <- data.frame(Group = c(groups, "control"), Z_Value = z_values, P_Value = p_values)
groups <- c('covered 5%', 'not covered 5%', 'covered 50%', 'not covered 50%')
donations <- c(70, 60, 65, 43)
participants <- c(91, 90, 91, 87)
control_participants <- 90
control_donations <- 66
z_values <- 5
p_values <- 5
for (i in 1:length(groups)) {
test <- prop.test(c(control_donations, donations[i]), c(control_participants, participants[i]), correct = FALSE)
z_values[i] <- qnorm(test$p.value / 2)
p_values[i] <- test$p.value
}
results <- data.frame(Group = c(groups, "control"), Z_Value = z_values, P_Value = p_values)
```{r}
groups <- c('covered 5%', 'not covered 5%', 'covered 50%', 'not covered 50%')
donations <- c(70, 60, 65, 43)
participants <- c(91, 90, 91, 87)
control_participants <- 90
control_donations <- 66
z_values <- 5
p_values <- 5
for (i in 1:length(groups)) {
test <- prop.test(c(control_donations, donations[i]), c(control_participants, participants[i]), correct = FALSE)
z_values[i] <- qnorm(test$p.value / 2)
p_values[i] <- test$p.value
}
results <- data.frame(Group = c(groups, "control"), Z_Value = z_values, P_Value = p_values)
c(groups, "control")
z_values
p_values
results <- data.frame(Group = c(groups), Z_Value = z_values, P_Value = p_values)
print(results)
adjusted_rq1 = p.adjust(results$P_Value, method = "holm")
print(adjusted_rq1)
adjusted_rq1 = p.adjust(results$P_Value, method = "holm")
print(adjusted_rq1)
?p.adjust
# load data
library (readr)
data <- read_delim("/Users/jonathanzeh/Library/CloudStorage/OneDrive-Personal/RStudio/Private_Projects/Flavia/data_PPP_wide_ExPra_final.csv", delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(data)
data_tmp = as.data.frame(data)
typeof(data_tmp)
str(data)
data_tmp = as.data.frame(rbindlist(data, use.names = TRUE, fill = TRUE))
library(data.table)
install.packages("data.table")
data_tmp = as.data.frame(rbindlist(data, use.names = TRUE, fill = TRUE))
data <- read_delim("/Users/jonathanzeh/Library/CloudStorage/OneDrive-Personal/RStudio/Private_Projects/Flavia/data_PPP_wide_ExPra_final.csv", delim = ";", escape_double = FALSE, trim_ws = TRUE)
data_tmp = as.data.frame(rbindlist(data, use.names = TRUE, fill = TRUE))
length(data)
data_tmp = data.frame()
for(i in length(data)){
rbind(data_tmp) <- as.vector(data[i])
}
rbind(data_tmp, as.vector(data[i]))
data <- read_delim("/Users/jonathanzeh/Library/CloudStorage/OneDrive-Personal/RStudio/Private_Projects/Flavia/data_PPP_wide_ExPra_final.csv")
data <- read_delim("/Users/jonathanzeh/Library/CloudStorage/OneDrive-Personal/RStudio/Private_Projects/Flavia/data_PPP_wide_ExPra_final.csv")
library(data.table)
data_tmp = as.data.frame(rbindlist(data, use.names = TRUE, fill = TRUE))
data <- read_delim("/Users/jonathanzeh/Library/CloudStorage/OneDrive-Personal/RStudio/Private_Projects/Flavia/data_PPP_wide_ExPra_final.csv")
library(data.table)
#dummy variable for living form with childern
data$living_p1_a <- ifelse(data$livingsituation_P1 == 3, 1, 0)
data$living_p2_a <- ifelse(data$livingsituation_P2 == 3, 1, 0)
#dummy variable: partner living together without childern
data$living_p1_b <- ifelse(data$livingsituation_P1 == 2, 1, 0)
data$living_p2_b <- ifelse(data$livingsituation_P2 == 2, 1, 0)
#dummy variable: partner living alone
data$living_p1_c <- ifelse(data$livingsituation_P1 %in% c(1,4,6,7), 1, 0)
data$living_p2_c <- ifelse(data$livingsituation_P2 %in% c(1,4,6,7), 1, 0)
print(data)
options(max.print=10000)
print(data)
colnames(data)
typeof(data)
world_gdp <- read.csv("/Users/jonathanzeh/Downloads/MKTGDP1WA646NWDB.csv")
us_debt <- read.csv("/Users/jonathanzeh/Downloads/HstDebt_19801001_20220101.csv")
View(us_debt)
us_debt <- us_debt[, c("Debt.Outstandig.Amount", "Fiscal.Year")]
us_debt <- us_debt[, c("Debt.Outstanding.Amount", "Fiscal.Year")]
View(us_debt)
View(world_gdp)
world_gdp <- world_gdp[-1:10, ]
world_gdp <- world_gdp[-1:10, ]
world_gdp <- world_gdp[-c(1:10), ]
ratio <- us_debt$Debt.Outstanding.Amount/world_gdp$MKTGDP1WA646NWDB
dates <- as.date(world_gdp$DATE)
dates <- date(world_gdp$DATE)
?Date
dates <- format.Date(world_gdp$DATE)
dates <- as.Date(world_gdp$DATE)
plot(x = dates, y = ratio)
?plot
plot(x = dates, y = ratio, type = "p", main = "Outstanding US debt relative to world GDP (1970 - 2022)")
plot(x = dates, y = ratio, type = "p", main = "Outstanding US debt relative to world GDP (1970 - 2022)", xlab = "Time", ylab = "US debt relative to world GDP")
plot(x = dates, y = ratio, type = "p", main = "Outstanding US debt relative to world GDP (1970 - 2022)", xlab = "Time", ylab = "US debt / world GDP")
plot(x = dates, y = ratio, type = "p", main = "Outstanding US debt relative to world GDP (1970 - 2022)", xlab = "Time", ylab = "US debt / world GDP", lty = "solid")
plot(x = dates, y = ratio, type = "p", main = "Outstanding US debt relative to world GDP (1970 - 2022)", xlab = "Time", ylab = "US debt / world GDP", cex = 1)
plot(x = dates, y = ratio, type = "p", main = "Outstanding US debt relative to world GDP (1970 - 2022)", xlab = "Time", ylab = "US debt / world GDP", pch = 1)
plot(x = dates, y = ratio, type = "p", main = "Outstanding US debt relative to world GDP (1970 - 2022)", xlab = "Time", ylab = "US debt / world GDP", pch = 2)
plot(x = dates, y = ratio, type = "p", main = "Outstanding US debt relative to world GDP (1970 - 2022)", xlab = "Time", ylab = "US debt / world GDP", pch = 3)
plot(x = dates, y = ratio, type = "p", main = "Outstanding US debt relative to world GDP (1970 - 2022)", xlab = "Time", ylab = "US debt / world GDP", pch = 16)
plot(x = dates, y = ratio, type = "p", main = "Outstanding US debt relative to world GDP (1970 - 2022)", xlab = "Time", ylab = "US debt / world GDP", pch = 1)
plot(x = dates, y = ratio, type = "p", main = "Outstanding US debt relative to world GDP (1970 - 2022)", xlab = "Time", ylab = "US debt / world GDP", pch = 1, size = 0.8)
plot(x = dates, y = ratio, type = "p", main = "Outstanding US debt relative to world GDP (1970 - 2022)", xlab = "Time", ylab = "US debt / world GDP", pch = 1, cex = 0.8)
plot(x = dates, y = ratio, type = "p", main = "Outstanding US debt relative to world GDP (1970 - 2022)", xlab = "Time", ylab = "US debt / world GDP", pch = 1, cex = 0.9)
ratio <- us_debt$Debt.Outstanding.Amount/world_gdp$MKTGDP1WA646NWDB[-c(20)]
dates <- as.Date(world_gdp$DATE)[-c(20)]
ratio <- us_debt$Debt.Outstanding.Amount/world_gdp$MKTGDP1WA646NWDB[-c(1:20)]
dates <- as.Date(world_gdp$DATE)[-c(1:20)]
plot(x = dates, y = ratio, type = "p", main = "Outstanding US debt relative to world GDP (1970 - 2022)", xlab = "Time", ylab = "US debt / world GDP", pch = 1, cex = 0.9)
ratio <- us_debt$Debt.Outstanding.Amount/world_gdp$MKTGDP1WA646NWDB[-c(1:20), ]
ratio <- us_debt$Debt.Outstanding.Amount/world_gdp$MKTGDP1WA646NWDB[-c(1:20)]
ratio <- (us_debt$Debt.Outstanding.Amount/world_gdp$MKTGDP1WA646NWDB)[-c(1:20)]
ratio <- (us_debt$Debt.Outstanding.Amount/world_gdp$MKTGDP1WA646NWDB)
ratio <- ratio[-c(1:20)]
dates <- as.Date(world_gdp$DATE)[-c(1:20)]
plot(x = dates, y = ratio, type = "p", main = "Outstanding US debt relative to world GDP (1970 - 2022)", xlab = "Time", ylab = "US debt / world GDP", pch = 1, cex = 0.9)
ratio <- (us_debt$Debt.Outstanding.Amount/world_gdp$MKTGDP1WA646NWDB)
ratio <- ratio[-c(1:20)]
dates <- as.Date(world_gdp$DATE)[-c(1:20)]
plot(x = dates, y = ratio, type = "p", main = "Outstanding US debt relative to world GDP (1970 - 2022)", xlab = "Time", ylab = "US debt / world GDP", pch = 1, cex = 0.9)
ratio <- us_debt$Debt.Outstanding.Amount/world_gdp$MKTGDP1WA646NWDB
dates <- as.Date(world_gdp$DATE)
plot(x = dates, y = ratio, type = "p", main = "Outstanding US debt relative to world GDP (1970 - 2022)", xlab = "Time", ylab = "US debt / world GDP", pch = 21, cex = 0.9)
plot(x = dates, y = ratio, type = "p", main = "Outstanding US debt relative to world GDP (1970 - 2022)", xlab = "Time", ylab = "US debt / world GDP", pch = 21, cex = 0.9)
plot(x = dates, y = ratio, type = "p", main = "Outstanding US debt relative to world GDP (1970 - 2022)", xlab = "Time", ylab = "US debt / world GDP", pch = 2, cex = 0.9)
plot(x = dates, y = ratio, type = "p", main = "Outstanding US debt relative to world GDP (1970 - 2022)", xlab = "Time", ylab = "US debt / world GDP", pch = 21, cex = 0.9)
plot(x = dates, y = ratio, type = "p", main = "Outstanding US debt relative to world GDP (1970 - 2022)", xlab = "Time", ylab = "US debt / world GDP", pch = 22, cex = 0.9)
plot(x = dates, y = ratio, type = "p", main = "Outstanding US debt relative to world GDP (1970 - 2022)", xlab = "Time", ylab = "US debt / world GDP", pch = 219, cex = 0.9)
plot(x = dates, y = ratio, type = "p", main = "Outstanding US debt relative to world GDP (1970 - 2022)", xlab = "Time", ylab = "US debt / world GDP", pch = 19, cex = 0.9)
plot(x = dates, y = ratio, type = "p", main = "Outstanding US debt relative to world GDP (1970 - 2022)", xlab = "Time", ylab = "US debt / world GDP", pch = 19, cex = 0.9, col = "blue")
plot(x = dates, y = ratio, type = "p", main = "Outstanding US debt relative to world GDP (1970 - 2022)", xlab = "Time", ylab = "US debt / world GDP", pch = 19, cex = 0.9, col = "darkblue")
plot(x = dates, y = ratio, type = "p", main = "Outstanding US debt relative to world GDP (1970 - 2022)", xlab = "Time", ylab = "US debt / world GDP", pch = 1, cex = 0.9, col = "darkblue")
plot(x = dates, y = ratio, type = "p", main = "Outstanding US debt relative to world GDP (1970 - 2022)", xlab = "Time", ylab = "US debt / world GDP", pch = 1, cex = 0.9, col = "blue")
ratio
world_gdp <- read.csv("/Users/jonathanzeh/Downloads/MKTGDP1WA646NWDB.csv")
world_gdp <- world_gdp[-c(1:10), ]
us_debt <- read.csv("/Users/jonathanzeh/Downloads/HstDebt_19801001_20220101.csv")
us_debt <- rev(us_debt)[, c("Debt.Outstanding.Amount", "Fiscal.Year")]
ratio <- us_debt$Debt.Outstanding.Amount/world_gdp$MKTGDP1WA646NWDB
dates <- as.Date(world_gdp$DATE)
plot(x = dates, y = ratio, type = "p", main = "Outstanding US debt relative to world GDP (1970 - 2022)", xlab = "Time", ylab = "US debt / world GDP", pch = 1, cex = 0.9, col = "blue")
world_gdp <- read.csv("/Users/jonathanzeh/Downloads/MKTGDP1WA646NWDB.csv")
world_gdp <- world_gdp[-c(1:10), ]
us_debt <- read.csv("/Users/jonathanzeh/Downloads/HstDebt_19801001_20220101.csv")
us_debt <- rev(us_debt)[, c("Debt.Outstanding.Amount", "Fiscal.Year")]
ratio <- us_debt$Debt.Outstanding.Amount/world_gdp$MKTGDP1WA646NWDB
world_gdp <- read.csv("/Users/jonathanzeh/Downloads/MKTGDP1WA646NWDB.csv")
world_gdp <- world_gdp[-c(1:10), ]
us_debt <- read.csv("/Users/jonathanzeh/Downloads/HstDebt_19801001_20220101.csv")
us_debt <- rev(us_debt[, c("Debt.Outstanding.Amount", "Fiscal.Year")])
ratio <- us_debt$Debt.Outstanding.Amount/world_gdp$MKTGDP1WA646NWDB
ratio
us_debt
world_gdp
world_gdp <- read.csv("/Users/jonathanzeh/Downloads/MKTGDP1WA646NWDB.csv")
us_debt <- read.csv("/Users/jonathanzeh/Downloads/HstDebt_19801001_20220101.csv")
View(us_debt)
View(world_gdp)
world_gdp <- read.csv("/Users/jonathanzeh/Downloads/MKTGDP1WA646NWDB.csv")
world_gdp <- world_gdp[-c(1:21), ]
View(world_gdp)
world_gdp <- read.csv("/Users/jonathanzeh/Downloads/MKTGDP1WA646NWDB.csv")
world_gdp <- world_gdp[-c(1:21), ]
us_debt <- read.csv("/Users/jonathanzeh/Downloads/HstDebt_19801001_20220101.csv")
us_debt <- us_debt[, c("Debt.Outstanding.Amount", "Fiscal.Year")]
ratio <- rev(us_debt$Debt.Outstanding.Amount)/world_gdp$MKTGDP1WA646NWDB
us_debt
world_gdp
world_gdp <- read.csv("/Users/jonathanzeh/Downloads/MKTGDP1WA646NWDB.csv")
world_gdp <- world_gdp[-c(1:21), ]
us_debt <- read.csv("/Users/jonathanzeh/Downloads/HstDebt_19801001_20220101.csv")
us_debt <- us_debt[-c(1:6), c("Debt.Outstanding.Amount", "Fiscal.Year")]
ratio <- rev(us_debt$Debt.Outstanding.Amount)/world_gdp$MKTGDP1WA646NWDB
dates <- as.Date(world_gdp$DATE)
plot(x = dates, y = ratio, type = "p", main = "Outstanding US debt relative to world GDP (1970 - 2022)", xlab = "Time", ylab = "US debt / world GDP", pch = 1, cex = 0.9, col = "blue")
world_gdp <- read.csv("/Users/jonathanzeh/Downloads/MKTGDP1WA646NWDB.csv")
world_gdp <- world_gdp[-c(1:21), ]
us_debt <- read.csv("/Users/jonathanzeh/Downloads/HstDebt_19801001_20220101.csv")
us_debt <- us_debt[-c(1:6), c("Debt.Outstanding.Amount", "Fiscal.Year")]
ratio <- rev(us_debt$Debt.Outstanding.Amount)/world_gdp$MKTGDP1WA646NWDB
dates <- as.Date(world_gdp$DATE)
plot(x = dates, y = ratio, type = "p", main = "Outstanding US Government Debt relative to World GDP (1970 - 2022)", xlab = "Time", ylab = "US debt / world GDP", pch = 1, cex = 0.9, col = "blue")
ratio
rev(us_debt$Debt.Outstanding.Amount)/world_gdp$MKTGDP1WA646NWDB
rev(us_debt$Debt.Outstanding.Amount)
world_gdp$MKTGDP1WA646NWDB
plot(x = dates, y = ratio, type = "p", main = "Outstanding US Government Debt relative to World GDP (1970 - 2022)", xlab = "Time", ylab = "US debt / world GDP", pch = 1, cex = 0.9, col = "blue")
ratio
us_debt <- read.csv("/Users/jonathanzeh/Downloads/HstDebt_19801001_20220101.csv")
View(us_debt)
world_gdp <- read.csv("/Users/jonathanzeh/Downloads/world-gdp-gross-domestic-product.csv")
world_gdp <- world_gdp[-c(1:21), ]
world_gdp <- read.csv("/Users/jonathanzeh/Downloads/world-gdp-gross-domestic-product.csv")
world_gdp <- read.csv("/Users/jonathanzeh/Downloads/world-gdp-gross-domestic-product.csv", skip = 16)
world_gdp <- read.csv("/Users/jonathanzeh/Downloads/world-gdp-gross-domestic-product.csv", skip = 16)
world_gdp <- world_gdp[-c(1:21), ]
world_gdp <- world_gdp[-c(1:21), 1]
world_gdp <- world_gdp[-c(1:21), 1]
world_gdp <- world_gdp[-c(1:21), c(1)]
world_gdp <- read.csv("/Users/jonathanzeh/Downloads/world-gdp-gross-domestic-product.csv", skip = 16)
world_gdp <- world_gdp[-c(1:21), c(2)]
world_gdp <- as.vector(world_gdp[-c(1:21), c(2)])
world_gdp <- as.vector(world_gdp[-c(1:21), 2])
world_gdp <- as.vector(world_gdp[-c(1:21), ])
world_gdp <- world_gdp[-c(1:21), ]
world_gdp <- read.csv("/Users/jonathanzeh/Downloads/world-gdp-gross-domestic-product.csv", skip = 16)
world_gdp <- world_gdp$GDP...Billions.of.US...[-c(1:21)]
world_gdp <- as.vector(world_gdp$GDP...Billions.of.US...[-c(1:21)])
world_gdp <- world_gdp$GDP...Billions.of.US...[-c(1:21)]
world_gdp <- read.csv("/Users/jonathanzeh/Downloads/world-gdp-gross-domestic-product.csv", skip = 16)
world_gdp <- as.vector(world_gdp$GDP...Billions.of.US...[-c(1:21)])
world_gdp <- read.csv("/Users/jonathanzeh/Downloads/world-gdp-gross-domestic-product.csv", skip = 16)
world_gdp <- read.csv("/Users/jonathanzeh/Downloads/world-gdp-gross-domestic-product.csv", skip = 16)
world_gdp <- as.vector(world_gdp$GDP...Billions.of.US...[-c(1:21)])
world_gdp <- world_gdp[-42]
us_debt <- read.csv("/Users/jonathanzeh/Downloads/HstDebt_19801001_20220101.csv")
us_debt <- us_debt[-c(1:6), c("Debt.Outstanding.Amount", "Fiscal.Year")]
world_gdp <- read.csv("/Users/jonathanzeh/Downloads/world-gdp-gross-domestic-product.csv", skip = 16)
world_gdp <- as.vector(world_gdp$GDP...Billions.of.US...[-c(1:21, 57:63)])
us_debt <- read.csv("/Users/jonathanzeh/Downloads/HstDebt_19801001_20220101.csv")
us_debt <- us_debt[-c(1:6), c("Debt.Outstanding.Amount", "Fiscal.Year")]
ratio <- rev(us_debt$Debt.Outstanding.Amount)/1000000000000/world_gdp$MKTGDP1WA646NWDB
ratio <- rev(us_debt$Debt.Outstanding.Amount)/1000000000000/world_gdp
dates <- as.Date(world_gdp$DATE)
dates <- as.Date(us_debt$Fiscal.Year)
plot(x = dates, y = ratio, type = "p", main = "Outstanding US Government Debt relative to World GDP (1970 - 2022)", xlab = "Time", ylab = "US debt / world GDP", pch = 1, cex = 0.9, col = "blue")
dates <- us_debt$Fiscal.Year
plot(x = dates, y = ratio, type = "p", main = "Outstanding US Government Debt relative to World GDP (1970 - 2022)", xlab = "Time", ylab = "US debt / world GDP", pch = 1, cex = 0.9, col = "blue")
ratio <- us_debt$Debt.Outstanding.Amount/1000000000000/world_gdp
dates <- us_debt$Fiscal.Year
plot(x = dates, y = ratio, type = "p", main = "Outstanding US Government Debt relative to World GDP (1970 - 2022)", xlab = "Time", ylab = "US debt / world GDP", pch = 1, cex = 0.9, col = "blue")
ratio <- us_debt$Debt.Outstanding.Amount/100000000000/world_gdp
dates <- us_debt$Fiscal.Year
plot(x = dates, y = ratio, type = "p", main = "Outstanding US Government Debt relative to World GDP (1970 - 2022)", xlab = "Time", ylab = "US debt / world GDP", pch = 1, cex = 0.9, col = "blue")
ratio <- us_debt$Debt.Outstanding.Amount/10000000000/world_gdp
dates <- us_debt$Fiscal.Year
plot(x = dates, y = ratio, type = "p", main = "Outstanding US Government Debt relative to World GDP (1970 - 2022)", xlab = "Time", ylab = "US debt / world GDP", pch = 1, cex = 0.9, col = "blue")
df <- expand.grid(
siglevel = seq(0,0.5,0.05),
perctrue = seq(0,1,0.1),
power = seq(0,1,0.1),
k = seq(1,100001,length.out=11)
)
df$ppv <- sapply(
seq_len(nrow(df)),
function(i) {
ppv(
k=df$k[i],
siglevel=df$siglevel[i],
perctrue = df$perctrue[i],
power = df$power[i]
)
})
df <- expand.grid(
siglevel = seq(0,0.5,0.05),
perctrue = seq(0,1,0.1),
power = seq(0,1,0.1),
k = seq(1,100001,length.out=11)
)
df$ppv <- sapply(
seq_len(nrow(df)),
function(i) {
ppv(
k=df$k[i],
siglevel=df$siglevel[i],
perctrue = df$perctrue[i],
power = df$power[i]
)
})
# function
ppv <- function(k, siglevel = 0.05, perctrue = 0.1, power = 0.6){
nofalsepos <- k*(1- perctrue) * siglevel
notruepos <- k*perctrue * power
ppv <- notruepos/(notruepos + nofalsepos)
ppv
}
#data frame
df <- expand.grid(
siglevel = seq(0,0.5,0.05),
perctrue = seq(0,1,0.1),
power = seq(0,1,0.1),
k = seq(1,100001,length.out=11)
)
df$ppv <- sapply(
seq_len(nrow(df)),
function(i) {
ppv(
k=df$k[i],
siglevel=df$siglevel[i],
perctrue = df$perctrue[i],
power = df$power[i]
)
})
head(df)
ggplot(df) +
geom_point(aes(x = n, y = ppv))
library(ggplot2)
ggplot(df) +
geom_point(aes(x = n, y = ppv))
library(ggplot2)
# Scatter Plot of n vs PPV
ggplot(df, aes(x = k, y = ppv)) +
geom_point(aes(color = factor(siglevel)), alpha = 0.6) +
scale_x_log10() +  # Log scale for better visualization
labs(x = "Number of Tests (k)", y = "Positive Predictive Value (PPV)", color = "Significance Level") +
theme_minimal()
library(ggplot2)
# Scatter Plot of n vs PPV
ggplot(df, aes(x = k, y = ppv)) +
geom_point(aes(color = factor(siglevel)), alpha = 0.6) +
scale_x_log10() +  # Log scale for better visualization
labs(x = "Number of Tests (k)", y = "Positive Predictive Value (PPV)", color = "Significance Level") +
theme_minimal()
# Heatmap of Power and Percentage True against PPV
ggplot(df, aes(x = power, y = perctrue, fill = ppv)) +
geom_tile() +
scale_fill_gradient(low = "blue", high = "red") +
labs(x = "Power", y = "Percentage True", fill = "PPV") +
theme_minimal()
# Line Plot of Significance Level vs. PPV for different Percentage True
ggplot(df %>% filter(perctrue %in% c(0.1, 0.5, 0.9)), aes(x = siglevel, y = ppv, color = factor(perctrue))) +
geom_line() +
labs(x = "Significance Level", y = "PPV", color = "Percentage True") +
theme_minimal()
library(dplyr)
# Line Plot of Significance Level vs. PPV for different Percentage True
ggplot(df %>% filter(perctrue %in% c(0.1, 0.5, 0.9)), aes(x = siglevel, y = ppv, color = factor(perctrue))) +
geom_line() +
labs(x = "Significance Level", y = "PPV", color = "Percentage True") +
theme_minimal()
ppv_simple <- function(siglevel, perctrue, power) {
numerator = (1 - siglevel) * perctrue * power
denominator = numerator + siglevel * (1 - perctrue)
return(numerator / denominator)
}
t <- 0.1  # perctrue
p <- 0.6  # power
s <- 0.05 # siglevel
ppv_simple(s, t, p)
4 * 30
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(ggplot2)
library(caTools)
library(dplyr)
library(purrr)
library(knitr)
library(readxl)
stock_level_data <- read_csv("/Users/jonathanzeh/Library/CloudStorage/OneDrive-Personal/BA_Thesis/BA_coding/datasets/eikon_data/stock_level_data/stock_level_data.csv")
stock_level_data <- read_csv("/Users/jonathanzeh/Library/CloudStorage/OneDrive-Personal/BA_Thesis/BA_coding/datasets/eikon_data/stock_level_data/stock_level_data.csv")
stock_level_data$date <- as.Date(stock_level_data$date)
stock_level_data$stock_RIC <- as.factor(stock_level_data$stock_RIC)
selected_dates <- seq.Date(from = as.Date("2019-06-01"), to = as.Date("2019-06-30"), by = "day")
plot(stock_level_data$date, stock_level_data$market_cap)
plot(stock_level_data$date %>% filter(stock_RIC == "ZURN.S"), stock_level_data$market_cap %>% filter(stock_RIC == "ZURN.S"))
stock_level_data <- stock_level_data %>%
%>% filter(stock_RIC == "ZURN.S")
stock_level_data <- stock_level_data %>%
filter(stock_RIC == "ZURN.S")
plot(stock_level_data$date, stock_level_data$market_cap)
View(stock_level_data)
stock_level_data <- stock_level_data %>%
filter(stock_RIC == "ZURN.S" & date %in% selected_dates)
plot(stock_level_data$date, stock_level_data$market_cap)
selected_dates <- seq.Date(from = as.Date("2019-06-01"), to = as.Date("2019-06-30"), by = "day")
stock_level_data <- stock_level_data %>%
filter(stock_RIC == "ZURN.S" & date %in% selected_dates)
plot(stock_level_data$date, stock_level_data$market_cap)
selected_dates <- seq.Date(from = as.Date("2019-06-01"), to = as.Date("2019-07-30"), by = "day")
stock_level_data <- stock_level_data %>%
filter(stock_RIC == "ZURN.S" & date %in% selected_dates)
plot(stock_level_data$date, stock_level_data$market_cap)
stock_level_data$date <- as.Date(stock_level_data$date)
selected_dates <- seq.Date(from = as.Date("2019-06-01"), to = as.Date("2019-06-30"), by = "day")
stock_level_data <- stock_level_data %>%
filter(stock_RIC == "ZURN.S" & date %in% selected_dates)
plot(stock_level_data$date, stock_level_data$market_cap)
stock_level_data <- read_csv("/Users/jonathanzeh/Library/CloudStorage/OneDrive-Personal/BA_Thesis/BA_coding/datasets/eikon_data/stock_level_data/stock_level_data.csv")
stock_level_data$date <- as.Date(stock_level_data$date)
stock_level_data$date <- as.Date(stock_level_data$date)
stock_level_data$stock_RIC <- as.factor(stock_level_data$stock_RIC)
selected_dates <- seq.Date(from = as.Date("2019-06-01"), to = as.Date("2019-06-30"), by = "day")
stock_level_data <- stock_level_data %>%
filter(stock_RIC == "ZURN.S" & date %in% selected_dates)
stock_level_data <- read_csv("/Users/jonathanzeh/Library/CloudStorage/OneDrive-Personal/BA_Thesis/BA_coding/datasets/eikon_data/stock_level_data/stock_level_data.csv")
stock_level_data$date <- as.Date(stock_level_data$date)
stock_level_data$date <- as.Date(stock_level_data$date)
selected_dates <- seq.Date(from = as.Date("2019-01-01"), to = as.Date("2019-07-30"), by = "day")
selected_dates <- seq.Date(from = as.Date("2019-01-01"), to = as.Date("2019-07-30"), by = "day")
stock_level_data <- stock_level_data %>%
filter(stock_RIC == "ZURN.S" & date %in% selected_dates)
plot(stock_level_data$date, stock_level_data$market_cap)
stock_level_data <- read_csv("/Users/jonathanzeh/Library/CloudStorage/OneDrive-Personal/BA_Thesis/BA_coding/datasets/eikon_data/stock_level_data/stock_level_data.csv")
last(stock_level_data)
raw_stock_level_data <-read_csv(
"/Users/jonathanzeh/Library/CloudStorage/OneDrive-Personal/BA_Thesis/BA_coding/datasets/eikon_data/stock_level_data/stock_level_data.csv")
last(raw_stock_level_data)
stock_level_data <- raw_stock_level_data
stock_level_data$date <- as.Date(stock_level_data$date)
selected_dates <- seq.Date(from = as.Date("2019-01-01"), to = as.Date("2019-07-30"), by = "day")
stock_level_data <- stock_level_data %>%
filter(stock_RIC == "ZURN.S" & date %in% selected_dates)
plot(stock_level_data$date, stock_level_data$market_cap)
#stock_level_data$stock_RIC <- as.factor(stock_level_data$stock_RIC)
last(stock_level_data)
last(raw_stock_level_data)
ZURN_data <- raw_stock_level_data %>%
filter(stock_RIC == "ZURN.S")
View(ZURN_data)
ZURN_data_test$date <- as.Date(ZURN_data_test$date)
ZURN_data_test <- ZURN_data
ZURN_data_test$date <- as.Date(ZURN_data_test$date)
View(ZURN_data)
View(ZURN_data_test)
plot(ZURN_data$date, ZURN_date$market_cap)
plot(ZURN_data$date, ZURN_data$market_cap)
plot(ZURN_data$date, ZURN_data$market_cap)
sum(is.na(ZURN_data$date))
um(is.nan(ZURN_data$date)) # This will count NaN values
sum(is.nan(ZURN_data$date)) # This will count NaN values
plot(ZURN_data$date, ZURN_data$market_cap, type = "l")
plot(ZURN_data_test$date, ZURN_data_test$market_cap, type = "l")
raw_stock_level_data <-read_csv(
"/Users/jonathanzeh/Library/CloudStorage/OneDrive-Personal/BA_Thesis/BA_coding/datasets/eikon_data/stock_level_data/stock_level_data.csv")
ZURN_data <- raw_stock_level_data %>%
filter(stock_RIC == "ZURN.S")
View(ZURN_data)
last(raw_stock_level_data)
View(raw_stock_level_data)
ZURN_data <- raw_stock_level_data %>%
filter(stock_RIC == "ZURN.S")
