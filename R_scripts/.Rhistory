theme_minimal()
# Indexing the prices so they both start at 100
ubs_indexed <- 100 * ubs_prices / first(ubs_prices)
apple_indexed <- 100 * apple_prices / first(apple_prices)
# Create data frames
ubs_df <- data.frame(Date=index(UBS), Symbol="UBS", IndexedPrice=ubs_indexed)
apple_df <- data.frame(Date=index(AAPL), Symbol="Apple", IndexedPrice=apple_indexed)
colnames(ubs_df) <- c("date", "stock", "close")
colnames(apple_df) <- c("date", "stock", "close")
# Combine the data frames
stock_data <- rbind(ubs_df, apple_df)
# Plot the data using ggplot2
ggplot(stock_data, aes(x=date, y=close, color=stock, group=stock)) +
geom_line() +
labs(title = "Daily Close Prices of UBS and Apple Over the Last Year",
x = "Date",
y = "Close Price") +
theme_minimal()
ubs_indexed
ubs_df
# Set the start date for one year ago
start_date <- Sys.Date() - 365
# Download stock data for UBS and Apple
getSymbols("UBS", src = "yahoo", from = start_date)
getSymbols("AAPL", src = "yahoo", from = start_date)
# Extract Adjusted Close prices
ubs_prices <- Cl(UBS)
apple_prices <- Cl(AAPL)
# Indexing the prices so they both start at 100
ubs_indexed <- 100 * ubs_prices / first(ubs_prices)
apple_indexed <- 100 * apple_prices / first(apple_prices)
# Create data frames
ubs_df <- data.frame(Date=index(UBS), Symbol="UBS", IndexedPrice=ubs_indexed)
apple_df <- data.frame(Date=index(AAPL), Symbol="Apple", IndexedPrice=apple_indexed)
ubs_df
# Load necessary libraries
library(quantmod)
library(ggplot2)
# Set the start date for one year ago
start_date <- Sys.Date() - 365
# Download stock data for UBS and Apple
getSymbols("UBS", src = "yahoo", from = start_date)
getSymbols("AAPL", src = "yahoo", from = start_date)
# Extract Adjusted Close prices
ubs_prices <- Cl(UBS)
apple_prices <- Cl(AAPL)
# Indexing the prices so they both start at 100
ubs_indexed <- 100 * ubs_prices / first(ubs_prices)
apple_indexed <- 100 * apple_prices / first(apple_prices)
# Create data frames
ubs_df <- data.frame(Date=index(UBS), Symbol="UBS", IndexedPrice=ubs_indexed)
apple_df <- data.frame(Date=index(AAPL), Symbol="Apple", IndexedPrice=apple_indexed)
colnames(ubs_df) <- c("date", "stock", "close")
colnames(apple_df) <- c("date", "stock", "close")
# Combine the data frames
stock_data <- rbind(ubs_df, apple_df)
# Plot the data using ggplot2
ggplot(stock_data, aes(x=date, y=close, color=stock, group=stock)) +
geom_line() +
labs(title = "Daily Close Prices of UBS and Apple Over the Last Year",
x = "Date",
y = "Close Price") +
theme_minimal()
ubs_df
# Create data frames
ubs_df <- data.frame(Date=index(UBS), Symbol="UBS", IndexedPrice=ubs_indexed)
ubs_df
# Load necessary libraries
library(quantmod)
library(ggplot2)
# Set the start date for one year ago
start_date <- Sys.Date() - 365
# Download stock data for UBS and Apple
getSymbols("UBS", src = "yahoo", from = start_date)
getSymbols("AAPL", src = "yahoo", from = start_date)
# Extract Adjusted Close prices and scale them
ubs_prices <- Cl(UBS) / first(Cl(UBS)) * 100
apple_prices <- Cl(AAPL) / first(Cl(AAPL)) * 100
# Create data frames for UBS and Apple
ubs_df <- data.frame(Date=index(UBS), Symbol="UBS", ScaledPrice=ubs_prices)
apple_df <- data.frame(Date=index(AAPL), Symbol="Apple", ScaledPrice=apple_prices)
colnames(ubs_df) <- c("date", "stock", "close")
colnames(apple_df) <- c("date", "stock", "close")
# Combine the data frames
stock_data <- rbind(ubs_df, apple_df)
# Plot the data using ggplot2
ggplot(stock_data, aes(x=date, y=close, color=stock, group=stock)) +
geom_line() +
labs(title = "Daily Close Prices of UBS and Apple Over the Last Year",
x = "Date",
y = "Close Price") +
theme_minimal()
# Create data frames for UBS and Apple
ubs_df <- data.frame(Date=index(UBS), Symbol="UBS", ScaledPrice=ubs_prices)
# Set the start date for one year ago
start_date <- Sys.Date() - 365
# Download stock data for UBS and Apple
getSymbols("UBS", src = "yahoo", from = start_date)
# Extract Adjusted Close prices and scale them
ubs_prices <- Cl(UBS) / first(Cl(UBS)) * 100
apple_prices <- Cl(AAPL) / first(Cl(AAPL)) * 100
ubs_prices
# Load necessary libraries
library(quantmod)
library(ggplot2)
# Set the start date for one year ago
start_date <- Sys.Date() - 365
# Download stock data for UBS and Apple
getSymbols("UBS", src = "yahoo", from = start_date)
getSymbols("AAPL", src = "yahoo", from = start_date)
# Extract Adjusted Close prices
ubs_prices <- Cl(UBS)
apple_prices <- Cl(AAPL)
# Create data frames for UBS and Apple
ubs_df <- data.frame(Date=index(UBS), Stock="UBS", Close=ubs_prices)
apple_df <- data.frame(Date=index(AAPL), Stock="Apple", Close=apple_prices)
colnames(ubs_df) <- c("date", "stock", "close")
colnames(apple_df) <- c("date", "stock", "close")
# Combine the data frames
stock_data <- rbind(ubs_df, apple_df)
# Plot the data using ggplot2
ggplot(stock_data, aes(x=date, y=close, color=stock, group=stock)) +
geom_line() +
labs(title = "Daily Close Prices of UBS and Apple Over the Last Year",
x = "Date",
y = "Close Price") +
theme_minimal()
ubs_df
ubs_df$returns <- first(close)/close
ubs_df$returns <- first(ubs_df$close)/ubs_df$close
ubs_df
# Create data frames for UBS and Apple
ubs_df <- data.frame(Date=index(UBS), Stock="UBS", Close=ubs_prices)
ubs_df$returns <- first(ubs_df$close)/ubs_df$close
apple_df <- data.frame(Date=index(AAPL), Stock="Apple", Close=apple_prices)
apple_df$returns <- first(apple_df$close)/apple_df$close
# Create data frames for UBS and Apple
ubs_df <- data.frame(Date=index(UBS), Stock="UBS", Close=ubs_prices)
ubs_df$returns <- first(ubs_df$close)/ubs_df$close
# Set the start date for one year ago
start_date <- Sys.Date() - 365
# Download stock data for UBS and Apple
getSymbols("UBS", src = "yahoo", from = start_date)
# Extract Adjusted Close prices
ubs_prices <- Cl(UBS)
apple_prices <- Cl(AAPL)
# Create data frames for UBS and Apple
ubs_df <- data.frame(Date=index(UBS), Stock="UBS", Close=ubs_prices)
ubs_df$returns <- first(ubs_df$close)/ubs_df$close
# Create data frames for UBS and Apple
ubs_df <- data.frame(Date=index(UBS), Stock="UBS", Close=ubs_prices)
ubs_df
first(ubs_df$close)/ubs_df$close
ubs_df$returns <- first(ubs_df$Close)/ubs_df$Close
# Create data frames for UBS and Apple
ubs_df <- data.frame(Date=index(UBS), Stock="UBS", Close=ubs_prices)
apple_df <- data.frame(Date=index(AAPL), Stock="Apple", Close=apple_prices)
colnames(ubs_df) <- c("date", "stock", "close")
colnames(apple_df) <- c("date", "stock", "close")
apple_df$returns <- first(apple_df$close)/apple_df$close
ubs_df$returns <- first(ubs_df$Close)/ubs_df$close
ubs_df$returns <- first(ubs_df$close)/ubs_df$close
# Combine the data frames
stock_data <- rbind(ubs_df, apple_df)
stock_data
# Load necessary libraries
library(quantmod)
library(ggplot2)
# Set the start date for one year ago
start_date <- Sys.Date() - 365
# Download stock data for UBS and Apple
getSymbols("UBS", src = "yahoo", from = start_date)
getSymbols("AAPL", src = "yahoo", from = start_date)
# Extract Adjusted Close prices
ubs_prices <- Cl(UBS)
apple_prices <- Cl(AAPL)
# Create data frames for UBS and Apple
ubs_df <- data.frame(Date=index(UBS), Stock="UBS", Close=ubs_prices)
apple_df <- data.frame(Date=index(AAPL), Stock="Apple", Close=apple_prices)
colnames(ubs_df) <- c("date", "stock", "close")
colnames(apple_df) <- c("date", "stock", "close")
apple_df$returns <- first(apple_df$close)/apple_df$close
ubs_df$returns <- first(ubs_df$close)/ubs_df$close
# Combine the data frames
stock_data <- rbind(ubs_df, apple_df)
# Plot the data using ggplot2
ggplot(stock_data, aes(x=date, y=close, color=stock, group=stock)) +
geom_line() +
labs(title = "Daily Close Prices of UBS and Apple Over the Last Year",
x = "Date",
y = "Close Price") +
theme_minimal()
# Load necessary libraries
library(quantmod)
library(ggplot2)
# Set the start date for one year ago
start_date <- Sys.Date() - 365
# Download stock data for UBS and Apple
getSymbols("UBS", src = "yahoo", from = start_date)
getSymbols("AAPL", src = "yahoo", from = start_date)
# Extract Adjusted Close prices
ubs_prices <- Cl(UBS)
apple_prices <- Cl(AAPL)
# Create data frames for UBS and Apple
ubs_df <- data.frame(Date=index(UBS), Stock="UBS", Close=ubs_prices)
apple_df <- data.frame(Date=index(AAPL), Stock="Apple", Close=apple_prices)
colnames(ubs_df) <- c("date", "stock", "close")
colnames(apple_df) <- c("date", "stock", "close")
apple_df$returns <- first(apple_df$close)/apple_df$close
ubs_df$returns <- first(ubs_df$close)/ubs_df$close
# Combine the data frames
stock_data <- rbind(ubs_df, apple_df)
# Plot the data using ggplot2
ggplot(stock_data, aes(x=date, y=returns, color=stock, group=stock)) +
geom_line() +
labs(title = "Daily Close Prices of UBS and Apple Over the Last Year",
x = "Date",
y = "Close Price") +
theme_minimal()
apple_df
colnames(ubs_df) <- c("date", "stock", "close")
colnames(apple_df) <- c("date", "stock", "close")
apple_df$returns <- apple_df$close/first(apple_df$close)
ubs_df$returns <- ubs_df$close/first(ubs_df$close)
# Combine the data frames
stock_data <- rbind(ubs_df, apple_df)
stock_data
ubs_df
# Plot the data using ggplot2
ggplot(stock_data, aes(x=date, y=returns, color=stock, group=stock)) +
geom_line() +
labs(title = "Daily Close Prices of UBS and Apple Over the Last Year",
x = "Date",
y = "Index Price") +
theme_minimal()
# Plot the data using ggplot2
ggplot(stock_data, aes(x=date, y=returns, color=stock, group=stock)) +
geom_line() +
labs(title = "Daily Close Prices of UBS and Apple",
x = "Date",
y = "Price Index") +
theme_minimal() +
scale_color_manual(values = c("UBS" = "red", "Apple" = "blue"))
# Setting up the plot area
plot(ubs_df$Date, ubs_df$ScaledPrice, type = "l", col = "blue", ylim = range(stock_data$ScaledPrice),
xlab = "Date", ylab = "Price Index", main = "Daily Close Prices of UBS and Apple")
plot(ubs_df$Date, ubs_df$ScaledPrice, type = "l", col = "blue", ylim = range(stock_data$ScaledPrice),
xlab = "Date", ylab = "Price Index", main = "Daily Close Prices of UBS and Apple")
# Split the data by stock
ubs_data <- stock_data[stock_data$stock == "UBS", ]
apple_data <- stock_data[stock_data$stock == "Apple", ]
# Create the plot
plot(ubs_data$date, ubs_data$returns, type = "l", col = "red", ylim = range(stock_data$returns),
xlab = "Date", ylab = "Price Index", main = "Daily Close Prices of UBS and Apple")
# Add lines for each stock
lines(ubs_data$date, ubs_data$returns, col = "red")
lines(apple_data$date, apple_data$returns, col = "blue")
# Add a legend
legend("topright", legend = c("UBS", "Apple"), col = c("red", "blue"), lty = 1, cex = 0.8)
# Split the data by stock
ubs_data <- stock_data[stock_data$stock == "UBS", ]
apple_data <- stock_data[stock_data$stock == "Apple", ]
# Create the plot
plot(ubs_data$date, ubs_data$returns, type = "l", col = "red", ylim = range(stock_data$returns),
xlab = "Date", ylab = "Price Index", main = "Daily Close Prices of UBS and Apple")
# Add lines for each stock
lines(ubs_data$date, ubs_data$returns, col = "red")
lines(apple_data$date, apple_data$returns, col = "blue")
# Add a legend
legend("topleft", legend = c("UBS", "Apple"), col = c("red", "blue"), lty = 1, cex = 0.8)
# Split the data by stock
ubs_data <- stock_data[stock_data$stock == "UBS", ]
apple_data <- stock_data[stock_data$stock == "Apple", ]
# Create the plot
plot(ubs_data$date, ubs_data$returns, type = "l", col = "red", ylim = range(stock_data$returns),
xlab = "Date", ylab = "Price Index", main = "Daily Close Prices of UBS and Apple")
# Add lines for each stock
lines(ubs_data$date, ubs_data$returns, col = "red")
lines(apple_data$date, apple_data$returns, col = "blue")
abline(h=1, lty = 2)
# Add a legend
legend("topleft", legend = c("UBS", "Apple"), col = c("red", "blue"), lty = 1, cex = 0.8, bty = "n")
# Split the data by stock
ubs_data <- stock_data[stock_data$stock == "UBS", ]
apple_data <- stock_data[stock_data$stock == "Apple", ]
# Create the plot
plot(ubs_data$date, ubs_data$returns, type = "l", col = "red", ylim = range(stock_data$returns),
xlab = "Date", ylab = "Price Index", main = "Daily Close Prices of UBS and Apple")
# Add lines for each stock
lines(ubs_data$date, ubs_data$returns, col = "red")
lines(apple_data$date, apple_data$returns, col = "blue")
# Add a legend
legend("topleft", legend = c("UBS", "Apple"), col = c("red", "blue"), lty = 1, cex = 0.8, bty = "n")
# Split the data by stock
ubs_data <- stock_data[stock_data$stock == "UBS", ]
apple_data <- stock_data[stock_data$stock == "Apple", ]
# Create the plot
plot(ubs_data$date, ubs_data$returns, type = "l", col = "red", ylim = range(stock_data$returns),
xlab = "Date", ylab = "Price Index", main = "Daily Close Prices of UBS and Apple")
# Add lines for each stock
lines(ubs_data$date, ubs_data$returns, col = "red")
lines(apple_data$date, apple_data$returns, col = "blue")
# Add a legend
legend("topleft", legend = c("UBS", "Apple"), col = c("red", "blue"), lty = 1, cex = 1.2, bty = "n")
# Split the data by stock
ubs_data <- stock_data[stock_data$stock == "UBS", ]
apple_data <- stock_data[stock_data$stock == "Apple", ]
# Create the plot
plot(ubs_data$date, ubs_data$returns, type = "l", col = "red", ylim = range(stock_data$returns),
xlab = "Date", ylab = "Price Index", main = "Daily Close Prices of UBS and Apple")
# Add lines for each stock
lines(ubs_data$date, ubs_data$returns, col = "red")
lines(apple_data$date, apple_data$returns, col = "blue")
# Add a legend
legend("topleft", legend = c("UBS", "Apple"), col = c("red", "blue"), lty = 1, cex = 1.1, bty = "n")
ubs_data
# Split the data by stock
ubs_data <- stock_data[stock_data$stock == "UBS", ]
apple_data <- stock_data[stock_data$stock == "Apple", ]
# Create the plot
plot(ubs_data$date, ubs_data$returns, type = "l", col = "red", ylim = range(stock_data$returns),
xlab = "Date", ylab = "Price Index", main = "Daily Close Prices of UBS and Apple")
# Add lines for each stock
lines(ubs_data$date, ubs_data$returns, col = "red")
lines(apple_data$date, apple_data$returns, col = "blue")
# Add a legend
legend("topleft", legend = c("UBS", "Apple"), col = c("red", "blue"), lty = 1, cex = 1.1, bty = "n")
ubs_data
head(ubs_data)
ubs_data$real_returns <- 1-ubs_data$close/lag(ubs_data$close)
head(ubs_data)
head(ubs_data)
ubs_data$real_returns <- 1-ubs_data$close/lag(ubs_data$close) * 100
ubs_data$real_returns <- 1-ubs_data$close/lag(ubs_data$close, 1)
head(ubs_data)
ubs_data <- na.omit(ubs_data)
head(ubs_data)
ubs_data$real_returns <- 1-ubs_data$close/lag(ubs_data$close, 1)
ubs_data <- na.omit(ubs_data)
ubs_data
head(ubs_data)
ubs_data$real_returns <- ubs_data$close/lag(ubs_data$close, 1)
ubs_data <- na.omit(ubs_data)
head(ubs_data)
ubs_data$real_returns <- diff(ubs_data$close/lag(ubs_data$close, 1))
ubs_data <- na.omit(ubs_data)
head(ubs_data)
?tq_transmute
ubs_data$close <- as.numeric(ubs_data$close)
ubs_data$real_returns <- diff(ubs_data$close/lag(ubs_data$close, 1))
head(ubs_data)
ubs_data$close <- as.numeric(ubs_data$close)
head(ubs_data)
ubs_data$real_returns <- diff(ubs_data$close/lag(ubs_data$close, 1))
ubs_returns <- diff(ubs_data$close/lag(ubs_data$close, 1))
ubs_returns
ubs_data$close <- as.numeric(ubs_data$close)
ubs_returns <- diff(ubs_data$close/lag(ubs_data$close, 1))
ubs_returns
library(quantmod)
# Set the start and end dates
start_date <- as.Date("2023-01-01")
end_date <- as.Date("2024-01-01")
# Download stock data for Apple (AAPL) and UBS
getSymbols("AAPL", src = "yahoo", from = start_date, to = end_date)
getSymbols("UBS", src = "yahoo", from = start_date, to = end_date)
# Calculate the daily returns
returns_aapl <- dailyReturn(AAPL)
returns_ubs <- dailyReturn(UBS)
# Calculate the standard deviation of returns
sd_aapl <- sd(na.omit(returns_aapl))
sd_ubs <- sd(na.omit(returns_ubs))
# Print the standard deviations
cat("Standard Deviation of Apple Returns:", sd_aapl, "\n")
cat("Standard Deviation of UBS Returns:", sd_ubs, "\n")
# Index the prices to start at 100
indexed_aapl <- Cl(AAPL) / first(Cl(AAPL)) * 100
indexed_ubs <- Cl(UBS) / first(Cl(UBS)) * 100
# Combine the indexed prices into a data frame
indexed_prices <- data.frame(Date=index(AAPL), AAPL=indexed_aapl, UBS=indexed_ubs)
# Print the first few rows of the indexed prices
head(indexed_prices)
# Calculate the standard deviation of returns
sd(na.omit(returns_aapl)) * sqrt(252)
sd(na.omit(returns_ubs)) * sqrt(252)
# Calculate the standard deviation of returns
sd(na.omit(returns_aapl)) * sqrt(252)
sd(na.omit(returns_ubs)) * sqrt(252)
# Load necessary libraries
library(quantmod)
library(ggplot2)
# Set the start date for one year ago
start_date <- Sys.Date() - 365
# Download stock data for UBS and Apple
getSymbols("UBS", src = "yahoo", from = start_date)
getSymbols("AAPL", src = "yahoo", from = start_date)
getSymbols("URTH", src = "yahoo", from = start_date)
# Extract Adjusted Close prices
ubs_prices <- Cl(UBS)
apple_prices <- Cl(AAPL)
world_prices <- Cl(URTH)
# Create data frames for UBS and Apple
ubs_df <- data.frame(Date=index(UBS), Stock="UBS", Close=ubs_prices)
apple_df <- data.frame(Date=index(AAPL), Stock="Apple", Close=apple_prices)
world_df <- data.frame(Date=index(URTH), Stock="World", Close=world_prices)
colnames(ubs_df) <- c("date", "stock", "close")
colnames(apple_df) <- c("date", "stock", "close")
colnames(world_df) <- c("date", "stock", "close")
apple_df$returns <- apple_df$close/first(apple_df$close)
ubs_df$returns <- ubs_df$close/first(ubs_df$close)
world_df$returns <- world_df$close/first(world_df$close)
# Combine the data frames
stock_data <- rbind(ubs_df, apple_df, world_df)
# Plot the data using ggplot2
ggplot(stock_data, aes(x=date, y=returns, color=stock, group=stock)) +
geom_line() +
labs(title = "Daily Close Prices of UBS and Apple",
x = "Date",
y = "Price Index") +
theme_minimal() +
scale_color_manual(values = c("UBS" = "red", "Apple" = "blue", "World" = "black"))
# Split the data by stock
ubs_data <- stock_data[stock_data$stock == "UBS", ]
apple_data <- stock_data[stock_data$stock == "Apple", ]
world_data <- stock_data[stock_data$stock == "World", ]
# Create the plot
plot(ubs_data$date, ubs_data$returns, type = "l", col = "red", ylim = range(stock_data$returns),
xlab = "Date", ylab = "Price Index", main = "Daily Close Prices of UBS and Apple")
# Add lines for each stock
lines(ubs_data$date, ubs_data$returns, col = "red")
lines(apple_data$date, apple_data$returns, col = "blue")
lines(world_data$date, world_data$returns, col = "black")
# Add a legend
legend("topleft", legend = c("UBS", "Apple", "World"), col = c("red", "blue", "black"), lty = 1, cex = 1.1, bty = "n")
# Split the data by stock
ubs_data <- stock_data[stock_data$stock == "UBS", ]
apple_data <- stock_data[stock_data$stock == "Apple", ]
world_data <- stock_data[stock_data$stock == "World", ]
# Create the plot
plot(ubs_data$date, ubs_data$returns, type = "l", col = "red", ylim = range(stock_data$returns),
xlab = "Date", ylab = "Price Index", main = "Daily Close Prices of UBS and Apple")
# Add lines for each stock
lines(ubs_data$date, ubs_data$returns, col = "red")
lines(apple_data$date, apple_data$returns, col = "blue")
lines(world_data$date, world_data$returns, col = "black")
# Add a legend
legend("topleft", legend = c("UBS", "Apple", "World"), col = c("red", "blue", "black"), lty = c(1, 1, 2), cex = 1.1, bty = "n")
# Split the data by stock
ubs_data <- stock_data[stock_data$stock == "UBS", ]
apple_data <- stock_data[stock_data$stock == "Apple", ]
world_data <- stock_data[stock_data$stock == "World", ]
# Create the plot
plot(ubs_data$date, ubs_data$returns, type = "l", col = "red", ylim = range(stock_data$returns),
xlab = "Date", ylab = "Price Index", main = "Daily Close Prices of UBS and Apple")
# Add lines for each stock
lines(ubs_data$date, ubs_data$returns, col = "red")
lines(apple_data$date, apple_data$returns, col = "blue")
lines(world_data$date, world_data$returns, col = "black", lty = 2)
# Add a legend
legend("topleft", legend = c("UBS", "Apple", "World"), col = c("red", "blue", "black"), lty = c(1, 1, 2), cex = 1.1, bty = "n")
# Split the data by stock
ubs_data <- stock_data[stock_data$stock == "UBS", ]
apple_data <- stock_data[stock_data$stock == "Apple", ]
world_data <- stock_data[stock_data$stock == "World", ]
# Create the plot
plot(ubs_data$date, ubs_data$returns, type = "l", col = "red", ylim = range(stock_data$returns),
xlab = "Date", ylab = "Price Index", main = "Daily Close Prices of UBS and Apple")
# Add lines for each stock
lines(ubs_data$date, ubs_data$returns, col = "red")
lines(apple_data$date, apple_data$returns, col = "blue")
lines(world_data$date, world_data$returns, col = "black", lty = 1.5)
# Add a legend
legend("topleft", legend = c("UBS", "Apple", "World"), col = c("red", "blue", "black"), lty = c(1, 1, 2), cex = 1.1, bty = "n")
# Split the data by stock
ubs_data <- stock_data[stock_data$stock == "UBS", ]
apple_data <- stock_data[stock_data$stock == "Apple", ]
world_data <- stock_data[stock_data$stock == "World", ]
# Create the plot
plot(ubs_data$date, ubs_data$returns, type = "l", col = "red", ylim = range(stock_data$returns),
xlab = "Date", ylab = "Price Index", main = "Daily Close Prices of UBS and Apple")
# Add lines for each stock
lines(ubs_data$date, ubs_data$returns, col = "red")
lines(apple_data$date, apple_data$returns, col = "blue")
lines(world_data$date, world_data$returns, col = "black", lty = 3)
# Add a legend
legend("topleft", legend = c("UBS", "Apple", "World"), col = c("red", "blue", "black"), lty = c(1, 1, 2), cex = 1.1, bty = "n")
# Split the data by stock
ubs_data <- stock_data[stock_data$stock == "UBS", ]
apple_data <- stock_data[stock_data$stock == "Apple", ]
world_data <- stock_data[stock_data$stock == "World", ]
# Create the plot
plot(ubs_data$date, ubs_data$returns, type = "l", col = "red", ylim = range(stock_data$returns),
xlab = "Date", ylab = "Price Index", main = "Daily Close Prices of UBS and Apple")
# Add lines for each stock
lines(ubs_data$date, ubs_data$returns, col = "red")
lines(apple_data$date, apple_data$returns, col = "blue")
lines(world_data$date, world_data$returns, col = "black", lty = 3)
# Add a legend
legend("topleft", legend = c("UBS", "Apple", "World"), col = c("red", "blue", "black"), lty = c(1, 1, 3), cex = 1.1, bty = "n")
# Split the data by stock
ubs_data <- stock_data[stock_data$stock == "UBS", ]
apple_data <- stock_data[stock_data$stock == "Apple", ]
world_data <- stock_data[stock_data$stock == "World", ]
# Create the plot
plot(ubs_data$date, ubs_data$returns, type = "l", col = "red", ylim = range(stock_data$returns),
xlab = "Date", ylab = "Price Index", main = "Daily Prices of UBS and Apple")
# Add lines for each stock
lines(ubs_data$date, ubs_data$returns, col = "red")
lines(apple_data$date, apple_data$returns, col = "blue")
lines(world_data$date, world_data$returns, col = "black", lty = 3)
# Add a legend
legend("topleft", legend = c("UBS", "Apple", "World"), col = c("red", "blue", "black"), lty = c(1, 1, 3), cex = 1.1, bty = "n")
