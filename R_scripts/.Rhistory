"FUND_ownership")
)
print(df_coefficients)
df_coefficients <- tibble(
variables = c("ETF_ownership", "log_market_cap", "inv_price",
"cumulative_return_12m", "amihud_ratio",
"FUND_ownership"),
coefficents_2010_2019 = fixed_effects_coefficients(df_1),
coefficients_2020 = fixed_effects_coefficients(df_2),
coefficients_2021_2023 = fixed_effects_coefficients(df_3)
)
df_coefficients <- tibble(
variables = c("ETF_ownership", "log_market_cap", "inv_price",
"cumulative_return_12m", "amihud_ratio",
"FUND_ownership"),
coefficents_2010_2019 = fixed_effects_coefficients(df_1),
coefficients_2020 = fixed_effects_coefficients(df_2),
coefficients_2021_2023 = fixed_effects_coefficients(df_3)
)
print(df_coefficients)
summary(mod_1)
mod_1$coefficients[, c(1, 4)]
mod_1$coefficients[c(1, 4)]
summary(fe_model)
print(fixed_effects_coefficients(df_1))
fixed_effects_coefficients <- function(df){
#######################################################
pdata <- pdata.frame(df, index = c("stock_RIC", "date"))
pdata$date <- as.Date(pdata$date)
pdata$month <- format(pdata$date, "%m")
#######################################################
# Convert month to a factor for fixed effects
pdata$month <- as.factor(pdata$month)
fe_model <- plm(final_monthly_std_dev ~ final_ETF_ownership + log_market_cap +
inv_price + cumulative_return_12m + amihud_ratio + FUND_ownership,
data = pdata, model = "within")
return(summary(fe_model))
}
print(fixed_effects_coefficients(df_1))
summary_1 <- fixed_effects_coefficients(df_1)
df_coefficients <- tibble(
variables = c("ETF_ownership", "log_market_cap", "inv_price",
"cumulative_return_12m", "amihud_ratio",
"FUND_ownership"),
coefficents_2010_2019 = fixed_effects_coefficients(df_1)$coefficients,
coefficients_2020 = fixed_effects_coefficients(df_2)$coefficients,
coefficients_2021_2023 = fixed_effects_coefficients(df_3)$coefficients
)
print(df_coefficients)
print(df_coefficients)
df_coefficients <- tibble(
variables = c("ETF_ownership", "log_market_cap", "inv_price",
"cumulative_return_12m", "amihud_ratio",
"FUND_ownership"),
coefficents_2010_2019 = fixed_effects_coefficients(df_1)$coefficients,
coefficients_2020 = fixed_effects_coefficients(df_2)$coefficients,
coefficients_2021_2023 = fixed_effects_coefficients(df_3)$coefficients
)
fixed_effects_coefficients(df_1)$coefficients
fixed_effects_coefficients(df_1)$coefficients[, c(1, 4)]
df_coefficients <- tibble(
variables = c("ETF_ownership", "log_market_cap", "inv_price",
"cumulative_return_12m", "amihud_ratio",
"FUND_ownership"),
coefficents_2010_2019 = fixed_effects_coefficients(df_1)$coefficients[, c(1)],
p_val_2010_2019 = fixed_effects_coefficients(df_1)$coefficients[, c(4)],
coefficients_2020 = fixed_effects_coefficients(df_2)$coefficients[, c(1)],
p_val_2020 = fixed_effects_coefficients(df_1)$coefficients[, c(4)],
coefficients_2021_2023 = fixed_effects_coefficients(df_3)$coefficients[, c(1)],
p_val_2021_2023 = fixed_effects_coefficients(df_1)$coefficients[, c(4)]
)
print(df_coefficients)
df_coefficients <- tibble(
variables = c("ETF_ownership", "log_market_cap", "inv_price",
"cumulative_return_12m", "amihud_ratio",
"FUND_ownership"),
coefficents_2010_2019 = fixed_effects_coefficients(df_1)$coefficients[, c(1)],
p_val_2010_2019 = fixed_effects_coefficients(df_1)$coefficients[, c(4)],
coefficients_2020 = fixed_effects_coefficients(df_2)$coefficients[, c(1)],
p_val_2020 = fixed_effects_coefficients(df_1)$coefficients[, c(4)],
coefficients_2021_2023 = fixed_effects_coefficients(df_3)$coefficients[, c(1)],
p_val_2021_2023 = round(fixed_effects_coefficients(df_1)$coefficients[, c(4)], 3)
)
df_coefficients <- tibble(
variables = c("ETF_ownership", "log_market_cap", "inv_price",
"cumulative_return_12m", "amihud_ratio",
"FUND_ownership"),
coefficents_2010_2019 = fixed_effects_coefficients(df_1)$coefficients[, c(1)],
p_val_2010_2019 = fixed_effects_coefficients(df_1)$coefficients[, c(4)],
coefficients_2020 = fixed_effects_coefficients(df_2)$coefficients[, c(1)],
p_val_2020 = fixed_effects_coefficients(df_1)$coefficients[, c(4)],
coefficients_2021_2023 = fixed_effects_coefficients(df_3)$coefficients[, c(1)],
p_val_2021_2023 = fixed_effects_coefficients(df_1)$coefficients[, c(4)]
)
print(df_coefficients)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(ggplot2)
library(caTools)
library(dplyr)
library(purrr)
library(knitr)
library(readxl)
df_q <- read.csv("/Users/jonathanzeh/Library/CloudStorage/OneDrive-Personal/BA_Thesis/BA_coding/datasets/eikon_data/variable_data/quarterly_panel_v1.csv")
df_q$date <- as.Date(df_q$date)
View(df_q)
View(df_q)
View(df)
View(df)
df_q_old <- df_q
df_q <- read.csv("/Users/jonathanzeh/Library/CloudStorage/OneDrive-Personal/BA_Thesis/BA_coding/datasets/eikon_data/variable_data/quarterly_panel_v1.csv")
df_q$date <- as.Date(df_q$date)
df_q <- df_q %>%
filter(ETF_ownership <= 1 | is.na(ETF_ownership) == TRUE, na.rm = TRUE)
filter(ETF_ownership <= 1 | is.na(ETF_ownership) == TRUE, na.rm = TRUE)
#lets only allow stocks with more than 20 observations
df_q$stock_RIC <- as.factor(df_q$stock_RIC)
observation_count <- df_q %>%
mutate(observation = ifelse(is.na(Variance_Ratio) == TRUE, 0, 1)) %>%
group_by(stock_RIC) %>%
summarise(n_observations = sum(observation)) %>%
filter(n_observations > 8)
### only keep observations that are in this data frame
stocks_to_keep <- observation_count$stock_RIC
df_q <- df_q %>%
filter(stock_RIC %in% stocks_to_keep)
winsorize_var <- function(x, probs = c(0.01, 0.99)) {
Winsorize(x, probs = probs, na.rm = TRUE)
}
df <- df %>%
group_by(stock_RIC) %>%
mutate(ETF_ownership_winsorized = winsorize_var(ETF_ownership),
monthly_std_dev_winsorized = winsorize_var(monthly_std_dev))
winsorize_var <- function(x, probs = c(0.01, 0.99)) {
Winsorize(x, probs = probs, na.rm = TRUE)
}
df_q <- df_q %>%
group_by(stock_RIC) %>%
mutate(ETF_ownership_winsorized = winsorize_var(ETF_ownership),
Variance_Ratio_winsorized = winsorize_var(Variance_Ratio))
winsorize_var <- function(x, probs = c(0.01, 0.99)) {
Winsorize(x, probs = probs, na.rm = TRUE)
}
df_q <- df_q %>%
group_by(stock_RIC) %>%
mutate(ETF_ownership_winsorized = winsorize_var(ETF_ownership),
Variance_Ratio_winsorized = winsorize_var(Variance_Ratio),
abs_Variance_Ratio_winsorized = winsorize_var(abs_Variance_Ratio))
df_q <- df_q %>%
mutate(final_ETF_ownership = scale(ETF_ownership_winsorized),
final_Variance_Ratio = scale(Variance_Ratio),
final_abs_Variance_Ratio = scale(abs_Variance_Ratio_winsorized),
final_FUND_ownership = scale(FUND_ownership))
mod_1_q <- lm(Variance_Ratio ~ final_ETF_ownership, data = df_q)
summary(mod_1_q)
######## split
df_q <- df_q %>%
mutate(year = format(date, "%Y"))
df_q_1 <- df_q %>%
filter(year > 2020)
######## split
df_q <- df_q %>%
mutate(year = format(date, "%Y"))
df_q_1 <- df_q %>%
filter(year < 2020)
df_q_2 < df_q %>%
filter(year > 2020)
df_q_2 < df_q %>%
filter(year > 2020)
df_q_2 <- df_q %>%
filter(year > 2020)
lm(Variance_Ratio ~ final_ETF_ownership, data = df_q_1)
summary(lm(Variance_Ratio ~ final_ETF_ownership, data = df_q_1))
summary(lm(Variance_Ratio ~ final_ETF_ownership, data = df_q_2))
tmp2 <- lm(Variance_Ratio ~ final_ETF_ownership, data = df_q_2)
tmp1 <- lm(Variance_Ratio ~ final_ETF_ownership, data = df_q_1)
summary(tmp2)
summary(tmp1)
df_q <- read.csv("/Users/jonathanzeh/Library/CloudStorage/OneDrive-Personal/BA_Thesis/BA_coding/datasets/eikon_data/variable_data/quarterly_panel_v1.csv")
df_q$date <- as.Date(df_q$date)
df_q <- df_q %>%
filter(ETF_ownership <= 1 | is.na(ETF_ownership) == TRUE, na.rm = TRUE)
#lets only allow stocks with more than 20 observations
df_q$stock_RIC <- as.factor(df_q$stock_RIC)
observation_count <- df_q %>%
mutate(observation = ifelse(is.na(Variance_Ratio) == TRUE, 0, 1)) %>%
group_by(stock_RIC) %>%
summarise(n_observations = sum(observation)) %>%
filter(n_observations > 8)
### only keep observations that are in this data frame
stocks_to_keep <- observation_count$stock_RIC
df_q <- df_q %>%
filter(stock_RIC %in% stocks_to_keep)
df$amihud_ratio[is.infinite(df$amihud_ratio)] <- NA
df_q <- df_q %>%
mutate(log_market_cap = log(market_cap),
inv_price = 1/price)
df_q <- df_q %>%
mutate(final_ETF_ownership = scale(ETF_ownership_winsorized),
final_Variance_Ratio = scale(Variance_Ratio),
final_abs_Variance_Ratio = scale(abs_Variance_Ratio_winsorized),
final_FUND_ownership = scale(FUND_ownership))
winsorize_var <- function(x, probs = c(0.01, 0.99)) {
Winsorize(x, probs = probs, na.rm = TRUE)
}
df_q <- df_q %>%
group_by(stock_RIC) %>%
mutate(ETF_ownership_winsorized = winsorize_var(ETF_ownership),
Variance_Ratio_winsorized = winsorize_var(Variance_Ratio),
abs_Variance_Ratio_winsorized = winsorize_var(abs_Variance_Ratio))
df_q <- df_q %>%
mutate(final_ETF_ownership = scale(ETF_ownership_winsorized),
final_Variance_Ratio = scale(Variance_Ratio),
final_abs_Variance_Ratio = scale(abs_Variance_Ratio_winsorized),
final_FUND_ownership = scale(FUND_ownership))
######## split
df_q <- df_q %>%
mutate(year = format(date, "%Y"))
df_q_1 <- df_q %>%
filter(year < 2020)
df_q_2 <- df_q %>%
filter(year > 2020)
tmp2 <- lm(final_Variance_Ratio ~ final_ETF_ownership, data = df_q_2)
tmp1 <- lm(final_Variance_Ratio ~ final_ETF_ownership, data = df_q_1)
summary(tmp2)
summary(tmp1)
summary(tmp2)
summary(tmp1)
mod_1_q <- lm(final_Variance_Ratio ~ final_ETF_ownership, data = df_q)
summary(mod_1_q)
library(plm)
library(zoo)
#######################################################
pdata <- pdata.frame(df_q, index = c("stock_RIC", "date"))
pdata$date <- as.Date(pdata$date)
df_q$quarter <- as.yearqtr(df_q$date, format = "%Y-%q")  # Convert date to quarterly format
#######################################################
# Convert month to a factor for fixed effects
pdata$month <- as.factor(pdata$month)
library(plm)
library(zoo)
df_q$quarter <- as.yearqtr(df_q$date, format = "%Y-%q")
#######################################################
pdata <- pdata.frame(df_q, index = c("stock_RIC", "date"))
pdata$date <- as.Date(pdata$date)
# Convert date to quarterly format
#######################################################
# Convert month to a factor for fixed effects
pdata$month <- as.factor(pdata$month)
library(plm)
library(zoo)
df_q$quarter <- as.yearqtr(df_q$date, format = "%Y-%q")
df_q$quarter <- as.factor(df_q$quarter)
#######################################################
pdata <- pdata.frame(df_q, index = c("stock_RIC", "date"))
# Convert date to quarterly format
#######################################################
fe_model_1_q <- plm(final_Variance_Ratio ~ final_ETF_ownership + log_market_cap +
inv_price + cumulative_return_12m + amihud_ratio + FUND_ownership,
data = pdata, model = "within")
library(plm)
library(zoo)
df_q$quarter <- as.yearqtr(df_q$date, format = "%Y-%q")
df_q$quarter <- as.factor(df_q$quarter)
#######################################################
pdata <- pdata.frame(df_q, index = c("stock_RIC", "quarter"))
# Convert date to quarterly format
#######################################################
fe_model_1_q <- plm(final_Variance_Ratio ~ final_ETF_ownership + log_market_cap +
inv_price + cumulative_return_12m + amihud_ratio + FUND_ownership,
data = pdata, model = "within")
df_q$amihud_ratio[is.infinite(df_q$amihud_ratio)] <- NA
library(plm)
library(zoo)
df_q$quarter <- as.yearqtr(df_q$date, format = "%Y-%q")
df_q$quarter <- as.factor(df_q$quarter)
#######################################################
pdata <- pdata.frame(df_q, index = c("stock_RIC", "quarter"))
# Convert date to quarterly format
#######################################################
fe_model_1_q <- plm(final_Variance_Ratio ~ final_ETF_ownership + log_market_cap +
inv_price + cumulative_return_12m + amihud_ratio + FUND_ownership,
data = pdata, model = "within")
summary(fe_model_1_q)
fixed_effects_coefficients(df_q)
fixed_effects_coefficients_q(df_q)
library(plm)
library(zoo)
fixed_effects_coefficients_q <- function(df){
df_q$quarter <- as.yearqtr(df_q$date, format = "%Y-%q")
df_q$quarter <- as.factor(df_q$quarter)
#######################################################
pdata <- pdata.frame(df_q, index = c("stock_RIC", "quarter"))
# Convert date to quarterly format
#######################################################
fe_model_1_q <- plm(final_Variance_Ratio ~ final_ETF_ownership + log_market_cap +
inv_price + cumulative_return_12m + amihud_ratio + FUND_ownership,
data = pdata, model = "within")
return(summary(fe_model_1_q))
}
fixed_effects_coefficients_q(df_q)
df_coefficients_q <- tibble(
variables = c("ETF_ownership", "log_market_cap", "inv_price",
"cumulative_return_12m", "amihud_ratio",
"FUND_ownership"),
coefficents_2010_2019 = fixed_effects_coefficients_q(df_q_1)$coefficients[, c(1)],
coefficients_2020_2023 = fixed_effects_coefficients_1(df_q_2)$coefficients[, c(1)],
)
df_coefficients_q <- tibble(
variables = c("ETF_ownership", "log_market_cap", "inv_price",
"cumulative_return_12m", "amihud_ratio",
"FUND_ownership"),
coefficents_2010_2019 = fixed_effects_coefficients_q(df_q_1)$coefficients[, c(1)],
coefficients_2020_2023 = fixed_effects_coefficients_q(df_q_2)$coefficients[, c(1)],
)
print(df_coefficients_q)
fixed_effects_coefficients_q(df_q)
######## split
df_q <- df_q %>%
mutate(year = numeric(format(date, "%Y")))
######## split
df_q <- df_q %>%
mutate(year = as.numeric(format(date, "%Y")))
df_q_1 <- df_q %>%
filter(year < 2020)
df_q_2 <- df_q %>%
filter(year > 2020)
df_coefficients_q <- tibble(
variables = c("ETF_ownership", "log_market_cap", "inv_price",
"cumulative_return_12m", "amihud_ratio",
"FUND_ownership"),
coefficents_2010_2019 = fixed_effects_coefficients_q(df_q_1)$coefficients[, c(1)],
coefficients_2020_2023 = fixed_effects_coefficients_q(df_q_2)$coefficients[, c(1)],
)
print(df_coefficients_q)
fixed_effects_coefficients_q <- function(df){
df$quarter <- as.yearqtr(df$date, format = "%Y-%q")
df$quarter <- as.factor(df$quarter)
#######################################################
pdata <- pdata.frame(df, index = c("stock_RIC", "quarter"))
# Convert date to quarterly format
#######################################################
fe_model_1_q <- plm(final_Variance_Ratio ~ final_ETF_ownership + log_market_cap +
inv_price + cumulative_return_12m + amihud_ratio + FUND_ownership,
data = pdata, model = "within")
return(summary(fe_model_1_q))
}
fixed_effects_coefficients_q(df_q)
df_coefficients_q <- tibble(
variables = c("ETF_ownership", "log_market_cap", "inv_price",
"cumulative_return_12m", "amihud_ratio",
"FUND_ownership"),
coefficents_2010_2019 = fixed_effects_coefficients_q(df_q_1)$coefficients[, c(1)],
coefficients_2020_2023 = fixed_effects_coefficients_q(df_q_2)$coefficients[, c(1)],
)
print(df_coefficients_q)
fixed_effects_coefficients_q(df_q_2)
monthly_mean <- df %>%
group_by(date) %>%
summarize(mean_ETF_ownership = mean(ETF_ownership_winsorized, na.rm = TRUE))
monthly_mean
plot(x = date, y = mean_ETF_ownership, data = monthly_mean)
plot(x = date, y = mean_ETF_ownership, data = monthly_mean)
plot(x = monthly_mean$date, y = monthly_mean$mean_ETF_ownership)
monthly_mean
plot(x = monthly_mean$date, y = monthly_mean$mean_ETF_ownership)
View(monthly_mean)
winsorize_var <- function(x, probs = c(0.05, 0.95)) {
Winsorize(x, probs = probs, na.rm = TRUE)
}
df <- df %>%
group_by(stock_RIC) %>%
mutate(ETF_ownership_winsorized = winsorize_var(ETF_ownership),
monthly_std_dev_winsorized = winsorize_var(monthly_std_dev))
df <- df %>%
mutate(final_ETF_ownership = scale(ETF_ownership_winsorized),
final_monthly_std_dev = scale(monthly_std_dev_winsorized),
final_FUND_ownership = scale(FUND_ownership))
df <- df %>%
mutate(log_market_cap = log(market_cap),
inv_price = 1/price)
df$amihud_ratio[is.infinite(df$amihud_ratio)] <- NA
winsorize_var <- function(x, probs = c(0.02, 0.98)) {
Winsorize(x, probs = probs, na.rm = TRUE)
}
df <- df %>%
group_by(stock_RIC) %>%
mutate(ETF_ownership_winsorized = winsorize_var(ETF_ownership),
monthly_std_dev_winsorized = winsorize_var(monthly_std_dev))
View(df)
# Extract the year from the date column
df <- df %>%
mutate(year = format(date, "%Y"))
# Group by year and calculate the mean of the variable for each year
annual_mean <- df %>%
group_by(year) %>%
summarize(mean_ETF_ownership = mean(ETF_ownership, na.rm = TRUE),
mean_ETF_ownership_wind = mean(ETF_ownership_winsorized, na.rm = TRUE))
colnames(annual_mean) = c("year", "mean ETF Ownership",
"mean ETF ownership (windsorized)")
# View the result
kable(annual_mean)
monthly_mean <- df %>%
group_by(date) %>%
summarize(mean_ETF_ownership = mean(ETF_ownership_winsorized, na.rm = TRUE))
plot(x = monthly_mean$date, y = monthly_mean$mean_ETF_ownership)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(ggplot2)
library(caTools)
library(dplyr)
library(purrr)
library(knitr)
library(readxl)
library(DescTools)
df_old y- df
df_old <- df
df_raw = read_csv("/Users/jonathanzeh/Library/CloudStorage/OneDrive-Personal/BA_Thesis/BA_coding/datasets/eikon_data/variable_data/monthly_panel_v1.csv")
df_raw$date <- as.Date(df_raw$date)
df <- df_raw
monthly_mean <- df %>%
group_by(date) %>%
summarize(rmp = mean(percent_of_traded_shares, na.rm = TRUE))
plot(x = monthly_mean$date, y = monthly_mean$tmp)
monthly_mean <- df %>%
group_by(date) %>%
summarize(tmp = mean(percent_of_traded_shares, na.rm = TRUE))
plot(x = monthly_mean$date, y = monthly_mean$tmp)
monthly_mean <- df %>%
group_by(date) %>%
summarize(tmp = mean(percent_of_traded_shares, na.rm = TRUE),
mean_ETF_ownership = mean(ETF_ownership, na.rm = TRUE))
plot(x = monthly_mean$date, y = monthly_mean$tmp)
par(mfrow = c(1,2))
par(mfrow = c(1,2))
plot(x = monthly_mean$date, y = monthly_mean$tmp)
plot(x = monthly_mean$date, y = monthly_mean$mean_ETF_ownership)
par(mfrow = c(1,2))
plot(x = monthly_mean$date, y = monthly_mean$tmp, main = "new")
plot(x = monthly_mean$date, y = monthly_mean$mean_ETF_ownership, main = "old")
monthly_mean <- df %>%
group_by(date) %>%
summarize(tmp = weighted.mean(percent_of_traded_shares, market_cap),
mean_ETF_ownership = weighted.mean(ETF_ownership, market_cap))
par(mfrow = c(1,2))
plot(x = monthly_mean$date, y = monthly_mean$tmp, main = "new")
monthly_mean <- df %>%
group_by(date) %>%
summarize(tmp = weighted.mean(percent_of_traded_shares, market_cap),
mean_ETF_ownership = weighted.mean(ETF_ownership, market_cap))
monthly_mean
monthly_mean <- df %>%
group_by(date) %>%
summarize(tmp = weighted.mean(percent_of_traded_shares, market_cap, na.rm = TRUE),
mean_ETF_ownership = weighted.mean(ETF_ownership, market_cap, na.rm = TRUE))
monthly_mean
par(mfrow = c(1,2))
plot(x = monthly_mean$date, y = monthly_mean$tmp, main = "new")
monthly_mean <- df %>%
group_by(date) %>%
summarize(tmp = weighted.mean(percent_of_traded_shares, market_cap, na.rm = TRUE),
mean_ETF_ownership = weighted.mean(ETF_ownership, market_cap, na.rm = TRUE))
monthly_mean
monthly_mean <- df %>%
group_by(date) %>%
summarize(tmp = weighted.mean(percent_of_traded_shares, market_cap, na.rm = TRUE),
mean_ETF_ownership = weighted.mean(ETF_ownership, market_cap, na.rm = TRUE))
monthly_mean <- df %>%
group_by(date) %>%
summarize(tmp = weighted.mean(percent_of_traded_shares, market_cap, na.rm = TRUE),
mean_ETF_ownership = weighted.mean(ETF_ownership, market_cap, na.rm = TRUE))
monthly_mean
monthly_mean <- df %>%
group_by(date) %>%
summarize(tmp = weighted.mean(percent_of_traded_shares, market_cap, na.rm = TRUE),
mean_ETF_ownership = weighted.mean(ETF_ownership, market_cap, na.rm = TRUE))
monthly_mean
df <- df_raw
monthly_mean <- df %>%
group_by(date) %>%
summarize(tmp = weighted.mean(percent_of_traded_shares, market_cap, na.rm = TRUE),
mean_ETF_ownership = weighted.mean(ETF_ownership, market_cap, na.rm = TRUE))
monthly_mean
df$percent_of_traded_shares
weighted.mean(df$percent_of_traded_shares, df$market_cap, na.rm = TRUE)
weighted.mean(df$percent_of_traded_shares, df$market_cap, na.rm = TRUE)
# Check if any weights are less than or equal to zero
sum(df$market_cap <= 0)
sum(df$market_cap <= 0)
sum(df$market_cap <= 0)
sum(df$market_cap <= 0, na.rm = TRUE)
df_clean <- df[!is.na(df$percent_of_traded_shares) & !is.na(df$market_cap) & df$market_cap > 0, ]
weighted.mean(df_clean$percent_of_traded_shares, df_clean$market_cap, na.rm = TRUE)
sum(df$percent_of_traded_shares <= 0, na.rm = TRUE)
df$percent_of_traded_shares[df$percent_of_traded_shares == 0] <- NA
df$market_cap[df$market_cap == 0] <- NA
df$ETF_ownership[df$ETF_ownership == 0] <- NA
monthly_mean <- df %>%
group_by(date) %>%
summarize(tmp = weighted.mean(percent_of_traded_shares, market_cap, na.rm = TRUE),
mean_ETF_ownership = weighted.mean(ETF_ownership, market_cap, na.rm = TRUE))
monthly_mean
monthly_mean <- df_clean %>%
group_by(date) %>%
summarize(tmp = weighted.mean(percent_of_traded_shares, market_cap, na.rm = TRUE),
mean_ETF_ownership = weighted.mean(ETF_ownership, market_cap, na.rm = TRUE))
monthly_mean
par(mfrow = c(1,2))
plot(x = monthly_mean$date, y = monthly_mean$tmp, main = "new")
plot(x = monthly_mean$date, y = monthly_mean$mean_ETF_ownership, main = "old")
